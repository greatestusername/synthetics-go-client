// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThresholdMonitorInput threshold monitor input
//
// swagger:model threshold_monitor_input
type ThresholdMonitorInput struct {

	// How to compare the result to the threshold value
	// Example: less_than
	// Enum: [less_than equals greater_than]
	ComparisonType string `json:"comparison_type,omitempty"`

	// Trigger threshold on pages matching this string
	//               e.g."*.rigor.com" (this would not match the top-level domain "rigor.com"), "rigor.com/app.js"
	// Example: rigor.com/example
	Matcher string `json:"matcher,omitempty"`

	// The name of the metric to monitor
	// Example: dom_load_time
	// Enum: [first_byte_time_ms dom_interactive_time_ms dom_load_time_ms dom_complete_time_ms start_render_ms onload_time_ms visually_complete_ms fully_loaded_time_ms first_paint_time_ms first_contentful_paint_time_ms first_meaningful_paint_time_ms first_interactive_time_ms first_cpu_idle_time_ms first_request_dns_time_ms first_request_connect_time_ms first_request_ssl_time_ms first_request_send_time_ms first_request_wait_time_ms first_request_receive_time_ms speed_index requests content_bytes html_files html_bytes image_files image_bytes javascript_files javascript_bytes css_files css_bytes video_files video_bytes font_files font_bytes other_files other_bytes client_errors connection_errors server_errors errors run_count success_count failure_count lighthouse_performance_score availability downtime total_blocking_time_ms largest_contentful_paint_time_ms cumulative_layout_shift]
	MetricName string `json:"metric_name,omitempty"`

	// The threshold value needed to trigger a failure.
	//               Format should be in milliseconds, bytes, or count depending on `metric_name`.
	// Example: 3000
	Value int64 `json:"value,omitempty"`
}

// Validate validates this threshold monitor input
func (m *ThresholdMonitorInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateComparisonType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetricName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var thresholdMonitorInputTypeComparisonTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["less_than","equals","greater_than"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		thresholdMonitorInputTypeComparisonTypePropEnum = append(thresholdMonitorInputTypeComparisonTypePropEnum, v)
	}
}

const (

	// ThresholdMonitorInputComparisonTypeLessThan captures enum value "less_than"
	ThresholdMonitorInputComparisonTypeLessThan string = "less_than"

	// ThresholdMonitorInputComparisonTypeEquals captures enum value "equals"
	ThresholdMonitorInputComparisonTypeEquals string = "equals"

	// ThresholdMonitorInputComparisonTypeGreaterThan captures enum value "greater_than"
	ThresholdMonitorInputComparisonTypeGreaterThan string = "greater_than"
)

// prop value enum
func (m *ThresholdMonitorInput) validateComparisonTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, thresholdMonitorInputTypeComparisonTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ThresholdMonitorInput) validateComparisonType(formats strfmt.Registry) error {
	if swag.IsZero(m.ComparisonType) { // not required
		return nil
	}

	// value enum
	if err := m.validateComparisonTypeEnum("comparison_type", "body", m.ComparisonType); err != nil {
		return err
	}

	return nil
}

var thresholdMonitorInputTypeMetricNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["first_byte_time_ms","dom_interactive_time_ms","dom_load_time_ms","dom_complete_time_ms","start_render_ms","onload_time_ms","visually_complete_ms","fully_loaded_time_ms","first_paint_time_ms","first_contentful_paint_time_ms","first_meaningful_paint_time_ms","first_interactive_time_ms","first_cpu_idle_time_ms","first_request_dns_time_ms","first_request_connect_time_ms","first_request_ssl_time_ms","first_request_send_time_ms","first_request_wait_time_ms","first_request_receive_time_ms","speed_index","requests","content_bytes","html_files","html_bytes","image_files","image_bytes","javascript_files","javascript_bytes","css_files","css_bytes","video_files","video_bytes","font_files","font_bytes","other_files","other_bytes","client_errors","connection_errors","server_errors","errors","run_count","success_count","failure_count","lighthouse_performance_score","availability","downtime","total_blocking_time_ms","largest_contentful_paint_time_ms","cumulative_layout_shift"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		thresholdMonitorInputTypeMetricNamePropEnum = append(thresholdMonitorInputTypeMetricNamePropEnum, v)
	}
}

const (

	// ThresholdMonitorInputMetricNameFirstByteTimeMs captures enum value "first_byte_time_ms"
	ThresholdMonitorInputMetricNameFirstByteTimeMs string = "first_byte_time_ms"

	// ThresholdMonitorInputMetricNameDomInteractiveTimeMs captures enum value "dom_interactive_time_ms"
	ThresholdMonitorInputMetricNameDomInteractiveTimeMs string = "dom_interactive_time_ms"

	// ThresholdMonitorInputMetricNameDomLoadTimeMs captures enum value "dom_load_time_ms"
	ThresholdMonitorInputMetricNameDomLoadTimeMs string = "dom_load_time_ms"

	// ThresholdMonitorInputMetricNameDomCompleteTimeMs captures enum value "dom_complete_time_ms"
	ThresholdMonitorInputMetricNameDomCompleteTimeMs string = "dom_complete_time_ms"

	// ThresholdMonitorInputMetricNameStartRenderMs captures enum value "start_render_ms"
	ThresholdMonitorInputMetricNameStartRenderMs string = "start_render_ms"

	// ThresholdMonitorInputMetricNameOnloadTimeMs captures enum value "onload_time_ms"
	ThresholdMonitorInputMetricNameOnloadTimeMs string = "onload_time_ms"

	// ThresholdMonitorInputMetricNameVisuallyCompleteMs captures enum value "visually_complete_ms"
	ThresholdMonitorInputMetricNameVisuallyCompleteMs string = "visually_complete_ms"

	// ThresholdMonitorInputMetricNameFullyLoadedTimeMs captures enum value "fully_loaded_time_ms"
	ThresholdMonitorInputMetricNameFullyLoadedTimeMs string = "fully_loaded_time_ms"

	// ThresholdMonitorInputMetricNameFirstPaintTimeMs captures enum value "first_paint_time_ms"
	ThresholdMonitorInputMetricNameFirstPaintTimeMs string = "first_paint_time_ms"

	// ThresholdMonitorInputMetricNameFirstContentfulPaintTimeMs captures enum value "first_contentful_paint_time_ms"
	ThresholdMonitorInputMetricNameFirstContentfulPaintTimeMs string = "first_contentful_paint_time_ms"

	// ThresholdMonitorInputMetricNameFirstMeaningfulPaintTimeMs captures enum value "first_meaningful_paint_time_ms"
	ThresholdMonitorInputMetricNameFirstMeaningfulPaintTimeMs string = "first_meaningful_paint_time_ms"

	// ThresholdMonitorInputMetricNameFirstInteractiveTimeMs captures enum value "first_interactive_time_ms"
	ThresholdMonitorInputMetricNameFirstInteractiveTimeMs string = "first_interactive_time_ms"

	// ThresholdMonitorInputMetricNameFirstCPUIdleTimeMs captures enum value "first_cpu_idle_time_ms"
	ThresholdMonitorInputMetricNameFirstCPUIdleTimeMs string = "first_cpu_idle_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestDNSTimeMs captures enum value "first_request_dns_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestDNSTimeMs string = "first_request_dns_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestConnectTimeMs captures enum value "first_request_connect_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestConnectTimeMs string = "first_request_connect_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestSslTimeMs captures enum value "first_request_ssl_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestSslTimeMs string = "first_request_ssl_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestSendTimeMs captures enum value "first_request_send_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestSendTimeMs string = "first_request_send_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestWaitTimeMs captures enum value "first_request_wait_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestWaitTimeMs string = "first_request_wait_time_ms"

	// ThresholdMonitorInputMetricNameFirstRequestReceiveTimeMs captures enum value "first_request_receive_time_ms"
	ThresholdMonitorInputMetricNameFirstRequestReceiveTimeMs string = "first_request_receive_time_ms"

	// ThresholdMonitorInputMetricNameSpeedIndex captures enum value "speed_index"
	ThresholdMonitorInputMetricNameSpeedIndex string = "speed_index"

	// ThresholdMonitorInputMetricNameRequests captures enum value "requests"
	ThresholdMonitorInputMetricNameRequests string = "requests"

	// ThresholdMonitorInputMetricNameContentBytes captures enum value "content_bytes"
	ThresholdMonitorInputMetricNameContentBytes string = "content_bytes"

	// ThresholdMonitorInputMetricNameHTMLFiles captures enum value "html_files"
	ThresholdMonitorInputMetricNameHTMLFiles string = "html_files"

	// ThresholdMonitorInputMetricNameHTMLBytes captures enum value "html_bytes"
	ThresholdMonitorInputMetricNameHTMLBytes string = "html_bytes"

	// ThresholdMonitorInputMetricNameImageFiles captures enum value "image_files"
	ThresholdMonitorInputMetricNameImageFiles string = "image_files"

	// ThresholdMonitorInputMetricNameImageBytes captures enum value "image_bytes"
	ThresholdMonitorInputMetricNameImageBytes string = "image_bytes"

	// ThresholdMonitorInputMetricNameJavascriptFiles captures enum value "javascript_files"
	ThresholdMonitorInputMetricNameJavascriptFiles string = "javascript_files"

	// ThresholdMonitorInputMetricNameJavascriptBytes captures enum value "javascript_bytes"
	ThresholdMonitorInputMetricNameJavascriptBytes string = "javascript_bytes"

	// ThresholdMonitorInputMetricNameCSSFiles captures enum value "css_files"
	ThresholdMonitorInputMetricNameCSSFiles string = "css_files"

	// ThresholdMonitorInputMetricNameCSSBytes captures enum value "css_bytes"
	ThresholdMonitorInputMetricNameCSSBytes string = "css_bytes"

	// ThresholdMonitorInputMetricNameVideoFiles captures enum value "video_files"
	ThresholdMonitorInputMetricNameVideoFiles string = "video_files"

	// ThresholdMonitorInputMetricNameVideoBytes captures enum value "video_bytes"
	ThresholdMonitorInputMetricNameVideoBytes string = "video_bytes"

	// ThresholdMonitorInputMetricNameFontFiles captures enum value "font_files"
	ThresholdMonitorInputMetricNameFontFiles string = "font_files"

	// ThresholdMonitorInputMetricNameFontBytes captures enum value "font_bytes"
	ThresholdMonitorInputMetricNameFontBytes string = "font_bytes"

	// ThresholdMonitorInputMetricNameOtherFiles captures enum value "other_files"
	ThresholdMonitorInputMetricNameOtherFiles string = "other_files"

	// ThresholdMonitorInputMetricNameOtherBytes captures enum value "other_bytes"
	ThresholdMonitorInputMetricNameOtherBytes string = "other_bytes"

	// ThresholdMonitorInputMetricNameClientErrors captures enum value "client_errors"
	ThresholdMonitorInputMetricNameClientErrors string = "client_errors"

	// ThresholdMonitorInputMetricNameConnectionErrors captures enum value "connection_errors"
	ThresholdMonitorInputMetricNameConnectionErrors string = "connection_errors"

	// ThresholdMonitorInputMetricNameServerErrors captures enum value "server_errors"
	ThresholdMonitorInputMetricNameServerErrors string = "server_errors"

	// ThresholdMonitorInputMetricNameErrors captures enum value "errors"
	ThresholdMonitorInputMetricNameErrors string = "errors"

	// ThresholdMonitorInputMetricNameRunCount captures enum value "run_count"
	ThresholdMonitorInputMetricNameRunCount string = "run_count"

	// ThresholdMonitorInputMetricNameSuccessCount captures enum value "success_count"
	ThresholdMonitorInputMetricNameSuccessCount string = "success_count"

	// ThresholdMonitorInputMetricNameFailureCount captures enum value "failure_count"
	ThresholdMonitorInputMetricNameFailureCount string = "failure_count"

	// ThresholdMonitorInputMetricNameLighthousePerformanceScore captures enum value "lighthouse_performance_score"
	ThresholdMonitorInputMetricNameLighthousePerformanceScore string = "lighthouse_performance_score"

	// ThresholdMonitorInputMetricNameAvailability captures enum value "availability"
	ThresholdMonitorInputMetricNameAvailability string = "availability"

	// ThresholdMonitorInputMetricNameDowntime captures enum value "downtime"
	ThresholdMonitorInputMetricNameDowntime string = "downtime"

	// ThresholdMonitorInputMetricNameTotalBlockingTimeMs captures enum value "total_blocking_time_ms"
	ThresholdMonitorInputMetricNameTotalBlockingTimeMs string = "total_blocking_time_ms"

	// ThresholdMonitorInputMetricNameLargestContentfulPaintTimeMs captures enum value "largest_contentful_paint_time_ms"
	ThresholdMonitorInputMetricNameLargestContentfulPaintTimeMs string = "largest_contentful_paint_time_ms"

	// ThresholdMonitorInputMetricNameCumulativeLayoutShift captures enum value "cumulative_layout_shift"
	ThresholdMonitorInputMetricNameCumulativeLayoutShift string = "cumulative_layout_shift"
)

// prop value enum
func (m *ThresholdMonitorInput) validateMetricNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, thresholdMonitorInputTypeMetricNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ThresholdMonitorInput) validateMetricName(formats strfmt.Registry) error {
	if swag.IsZero(m.MetricName) { // not required
		return nil
	}

	// value enum
	if err := m.validateMetricNameEnum("metric_name", "body", m.MetricName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this threshold monitor input based on context it is used
func (m *ThresholdMonitorInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdMonitorInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdMonitorInput) UnmarshalBinary(b []byte) error {
	var res ThresholdMonitorInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
